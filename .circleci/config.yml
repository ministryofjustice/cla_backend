version: 2
jobs:
  build:
    docker:
      - image: docker:18-git
    environment:
      APP_NAME: "get-access/cla_backend"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Login to container registry
          command: |
            apk add --no-cache --no-progress --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ aws-cli
            login="$(aws ecr get-login --region eu-west-1 --no-include-email)"
            ${login}
      - run:
          name: Build Docker image
          command: |
            docker build --tag $ECR_ENDPOINT/$APP_NAME:$CIRCLE_SHA1 .
            docker tag $ECR_ENDPOINT/$APP_NAME:$CIRCLE_SHA1 $ECR_ENDPOINT/$APP_NAME:$CIRCLE_BRANCH
      - run:
          name: Validate Python version
          command: |
            docker run --rm --tty --interactive $ECR_ENDPOINT/$APP_NAME:$CIRCLE_SHA1 python --version | grep "2.7"
      - run:
          name: Push Docker image
          command: |
            docker push $ECR_ENDPOINT/$APP_NAME:$CIRCLE_SHA1
            docker push $ECR_ENDPOINT/$APP_NAME:$CIRCLE_BRANCH

  test:
    docker:
      - image: circleci/python:2.7
        environment:
          DB_NAME: circle_test
          DB_USER: root
          DJANGO_SETTINGS_MODULE: cla_backend.settings.circle
      - image: circleci/postgres:9.4-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    steps:
      - checkout
      - run: sudo apt-get install postgresql-client-9.6
      - run:
          name: Setup Postgres
          command: |
            psql -d postgresql://$DB_USER@localhost/$DB_NAME -c "create extension pgcrypto;"
            psql -d postgresql://$DB_USER@localhost/template1 -c 'create extension pgcrypto;'
      - run:
          name: Setup Python environment
          command: |
            pip install virtualenv
            virtualenv env-ci
      - restore_cache:
          keys:
            - pip-v2-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/testing.txt" }}
      - run:
          name: Install dependencies
          command: |
            source env-ci/bin/activate
            pip install --requirement requirements.txt --requirement requirements/testing.txt
      - save_cache:
          key: pip-v2-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/testing.txt" }}
          paths:
            - "~/.cache/pip"

      - run:
          name: Run unit tests
          command: |
            source env-ci/bin/activate
            python manage.py test --verbosity=2

workflows:
  version: 2
  build_and_test:
    jobs:
      - test
      - build